# the working directory
workdir: /storage/COSMOGRAIL/NOT_PSJ1721+8842
# where to find new images
raw_dirs:
  - /mnt/lestafs/PRERED/NOT/PSJ1721+8842_R
# for logging
log_directory: /tmp/logs
# some processes can be parallelized
multiprocessing_cpu_count: 8

# now we define our Region of Interest (ROI)
# the ROI will be extracted, and have flux calibrated cutouts prepared.
ROI:
  PSJ1721+8842: 
    coordinates: [260.43437, 88.70599]  # [ra, dec] in degrees
ROI_size: 3.5  # in arcseconds, will not consider reference stars this close
# the ROI will be used as a position starting point for the plate solving.

# telescope information:
telescope:
  name: NOT
  longitude: +28.75
  latitude: -17.89
  elevation: 2382.0
  imager_name: StanCAM

# do plots of extracted sources?
source_extraction_do_plots: 1
# trimming the images upon importation, in pixels
trim_vertical: 0
trim_horizontal: 0

# are your images already plate solved? if yes, we will skip the plate solving step 
already_plate_solved: 0
# plate solving strategy: plate solve all, or plate solve one and align the others 
# onto the first one.
# possibilities: 'plate_solve', 'alternate_gaia_solve'
plate_solving_strategy: 'plate_solve'

# this is a plate scale interval to speed up the plate solving, 
# you can make it more precise if you know the plate scale of your instrument. 
# In arcseconds per pixel.
plate_scale_interval: [0.15, 0.2]

# if the plate solving is to be made with gaia, you need the following argument as well:
# this is the radius in which to query (all) gaia stars around the ROI, in arcseconds.
alternate_plate_solve_gaia_radius: 180

# now for the plate solving, we are going to use my wrapper around Astrometry.net:
# widefield_plate_solver
# It can either use a local installation (solve-field command in path)
# or the astrometry.net api. We will try to use the local installation
# if the astrometry api key below is null.
# else we'll use the API.
astrometry_net_api_key: null

# by the way, inevitably some images are not solvable. Please define the loss fraction you deem acceptable here.
plate_solving_min_success_fraction: 0.85
# if you notice your images are really low in quality (terrible seeing, high sky, really bad pointings ...")
# and identify this as the reason of the plate solving failing, you can execute this database query:
# 'update frames set comment='cannot be plate solved', eliminated = 1 where plate_solved=0;'
# (after sqlite3 $workdir/database.sqlite3)
# then we will not try to plate solve those anymore.

# now the calibration stars selection.
# we can either focus on the footprint common to all images, the idea being stability across
# epochs in both the PSF model and normalization coefficient.
# only works with stable pointings obviously, and recommended only if you plan on reducing the dataset once
# (because each new frame will change the footprint, and trigger the computation of all the downstream steps again)
# param name: 'common_footprint_stars'
# The other possibility is looking for stars close to the ROI: ROI_disk. This offers a stable footprint,
# so you can add more frames and only the downstream steps on the new frames will execute.
# in summary: 'common_footprint_stars', or 'ROI_disk'
# I recomment the latter, seems to work well.
star_selection_strategy: 'ROI_disk'
# so, if the above is 'ROI_disk', provide here the radius in arcseconds:
ROI_disk_radius_arcseconds: 211
# now the stars, depending on your setup you will need to probe a different range
# of magnitudes to both provide high S/N constraints to your normalization and PSF models,
# while avoiding saturation -- set to null for no contraints
star_min_gmag: 14.0
star_max_gmag: 20.5
# we discard stars that were not well fitted by a point source solution in gaia
# (could be galaxies, or very crowded fields, or doubles ...which we need to avoid)
# set to null for no constraints
star_max_astrometric_excess_noise: 9.0
# finally, we can also request a small photometric error,
# as the photometric error will go up with variability. this way we can select
# more stable stars.
star_max_phot_g_mean_flux_error: 9.0
# number criterion
min_number_stars: 6
# and whether we query again ...can be useful, but in principle querying once should work.
gaia_query_redo: false

# each good star is then named with a single letter, by ascending distance from the ROI.
# if more than 26, names will include 'aa', 'ab', etc. --> then switch to a list instead of a string.
# these stars will be used for the PSF model and normalization.
# if null: uses the top 10 closest star to the ROI.
stars_to_use_psf: null
stars_to_use_norm: 20

# Stamp extraction -- squares of size defined below.
stamp_size_stars: 32
stamp_size_ROI: 48 
redo_stamp_extraction: true


# PSF modelling
redo_psf: false
subsampling_factor: 2
psf_n_iter_analytic: 200 # number of iterations (l-bfgs-b) spent fitting a moffat
psf_n_iter_pixels: 4000 # number of iterations (adabelief) spent fitting the pixel grid.

# General preparation beyond PSF.
# we'll have saved a chi2 value for each PSF fit.
# we can filter the bad fit by comparing the chi2 values.
# psf_fit_exclude_strategy: 'null', or 'sigma_clip', or 'threshold'
# the first one would look like:
#psf_fit_exclude_strategy: null  # not excluding anything
# second one:
psf_fit_exclude_strategy: 
    sigma_clip: 4 # from how many sigma from the median do we exclude?
# and the last one: (uncomment both lines and comment the two lines just above)
#psf_fit_exclude_strategy:
#    threshold: [0, 1.5] # range of values of chi2 that we keep.

# star photometry
redo_star_photometry: true
star_deconv_n_iter: 3000

# normalization coefficient
# excluding the measured star fluxes we do not trust. same as for the PSF above.
fluxes_fit_exclude_strategy:
  sigma_clip: 3.0


# and finally! the preparation of the ROI.
# we provide another chance of eliminating more frames here.
# you can filter on any column of the 'frames' table of the sqlite3 database.
# we'll provide below the structure you should follow with some examples.
constraints_on_frame_columns_for_roi:
  seeing_arcseconds: [0.0, 3.0]
#  sky_level_electron_per_second: [0., 1000.]
#  ellipticity: [0.0, 0.5]
# we will not include anything beyond those limits.

# and where do you want your prepared cutouts? (a single hdf5 file)
# by default, null --> "$workdir/prepared_roi_cutouts"
prepared_roi_cutouts_path: null
